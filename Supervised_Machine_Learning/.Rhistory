table_summary <- table %>% group_by(country) %>% summarize(gdp)
head(table)
plot <- ggplot(table, aes(gdp, happinessscore,)) + geom_point()
plot +geom_smooth(method = "lm",
formula = y ~ x)
table <- read.csv(file='sml_linreg.csv',check.names=F,stringsAsFactors = F)
table_summary <- table %>% group_by(country) %>% summarize(gdp)
head(table)
summary(lm(happinessscore ~ gdp, data = table))
plot <- ggplot(table, aes(gdp, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness family
summary(lm(happinessscore ~ family, data = table))
plot <- ggplot(table, aes(family, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness lifeexpenctancy
summary(lm(happinessscore ~ lifeexpectancy, data = table))
plot <- ggplot(table, aes(lifeexpectancy, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness freedom
summary(lm(happinessscore ~ freedom, data = table))
plot <- ggplot(table, aes(freedom, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness generosity
summary(lm(happinessscore ~ generosity, data = table))
plot <- ggplot(table, aes(generosity, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness trust
summary(lm(happinessscore ~ trust, data = table))
plot <- ggplot(table, aes(trust, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness alcohol_liperyear
summary(lm(happinessscore ~ alcohol_liperyear, data = table))
plot <- ggplot(table, aes(alcohol_liperyear, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Multiple Linear Regression
# Happinessscore ~ all
lm(happinessscore ~ gdp + family + lifeexpectancy + freedom + generosity + trust, alcohol_liperyear, data = table)
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
lm(happinessscore ~ gdp + family + lifeexpectancy, data = table)
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(lm(happinessscore ~ gdp + family + lifeexpectancy, data = table))
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
gfl <- summary(lm(happinessscore ~ gdp + family + lifeexpectancy, data = table))
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(lm(happinessscore ~ gdp + family + lifeexpectancy, data = table))
gfl <- summary(lm(happinessscore ~ gdp + family + lifeexpectancy, data = table))
abline(gfl, col="red")
gfl <- summary(lm(happinessscore ~ gdp + family + lifeexpectancy, data = table))
plot <- gfl
abline(gfl, col="red")
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(table)
plot(table$gdp, table$happinessscore)
# Data Partition
P1 = runif(nrow(table))
P1
P2 = order(P1)
p2
P2
training_ds
training_ds = table[P2[1:149],]
training_ds
#Remove "country" column
table$country <- NULL
head(table)
# Data Partition
P1 = runif(nrow(table))
P2 = order(P1)
training_ds = table[P2[1:149],]
training_ds
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(table)
plot(table$gdp, table$happinessscore)
#Remove "country" column
table$country <- NULL
head(table)
# Data Partition
P1 = runif(nrow(table))
# Data Partition
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
testing_ds = table [P1[51:149]]
testing_ds
training_ds
# Data Partition (random sampled)
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
training_ds
testing_ds = table [P1[51:149]]
testing_ds
testing_ds = table [P1[51:149,]]
testing_ds
testing_ds = table [P1[51:149],]
testing_ds
testing_ds = table [P2[51:149],]
testing_ds
# Model Building
happiness_regression = lm(happinessscore~gdp+family+lifeexpectancy,
data = training_ds)
abline(happiness_regression col="red")
abline(happiness_regression, col="red")
# Model Building
happiness_regression = lm(happinessscore~gdp+family,
data = training_ds)
abline(happiness_regression, col="red")
# Model Building
happiness_regression = lm(happinessscore~gdp,
data = training_ds)
abline(happiness_regression, col="red")
# Data Partition (random sampled)
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
training_ds
testing_ds = table [P2[51:149],]
testing_ds
# Model Building
happiness_regression = lm(happinessscore~gdp,
data = training_ds)
abline(happiness_regression, col="red")
# Read in the csv file
table <- read.csv(file='sml_linreg.csv',check.names=F,stringsAsFactors = F)
table_summary <- table %>% group_by(country) %>% summarize(gdp)
head(table)
# Happiness - GDP
summary(lm(happinessscore ~ gdp, data = table))
plot <- ggplot(table, aes(gdp, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness family
summary(lm(happinessscore ~ family, data = table))
plot <- ggplot(table, aes(family, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness lifeexpenctancy
summary(lm(happinessscore ~ lifeexpectancy, data = table))
plot <- ggplot(table, aes(lifeexpectancy, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness freedom
summary(lm(happinessscore ~ freedom, data = table))
plot <- ggplot(table, aes(freedom, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness generosity
summary(lm(happinessscore ~ generosity, data = table))
plot <- ggplot(table, aes(generosity, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness trust
summary(lm(happinessscore ~ trust, data = table))
plot <- ggplot(table, aes(trust, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness alcohol_liperyear
summary(lm(happinessscore ~ alcohol_liperyear, data = table))
plot <- ggplot(table, aes(alcohol_liperyear, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(table)
plot(table$gdp, table$happinessscore)
#Remove "country" column
table$country <- NULL
head(table)
# Data Partition (random sampled)
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
training_ds
testing_ds = table [P2[51:149],]
testing_ds
# Model Building
happiness_regression = lm(happinessscore~gdp,
data = training_ds)
abline(happiness_regression, col="red")
# Model Building
happiness_regression = lm(happinessscore~gdp+family,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
pred_values = predict(happiness_regression, newdata = test_ds)
pred_values = predict(happiness_regression, newdata = testing_ds)
pred_values
testing_ds$pred_happinessscore = pred_values
View(testing_ds)
testing_ds2 <- testing_ds[, c("pred_values", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
testing_ds2 <- testing_ds[, c("pred_happinessscore", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
View(testing_ds2)
# Read in the csv file
table <- read.csv(file='sml_linreg.csv',check.names=F,stringsAsFactors = F)
table_summary <- table %>% group_by(country) %>% summarize(gdp)
head(table)
# Happiness - GDP
summary(lm(happinessscore ~ gdp, data = table))
plot <- ggplot(table, aes(gdp, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness family
summary(lm(happinessscore ~ family, data = table))
plot <- ggplot(table, aes(family, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness lifeexpenctancy
summary(lm(happinessscore ~ lifeexpectancy, data = table))
plot <- ggplot(table, aes(lifeexpectancy, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness freedom
summary(lm(happinessscore ~ freedom, data = table))
plot <- ggplot(table, aes(freedom, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness generosity
summary(lm(happinessscore ~ generosity, data = table))
plot <- ggplot(table, aes(generosity, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness trust
summary(lm(happinessscore ~ trust, data = table))
plot <- ggplot(table, aes(trust, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness alcohol_liperyear
summary(lm(happinessscore ~ alcohol_liperyear, data = table))
plot <- ggplot(table, aes(alcohol_liperyear, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(table)
plot(table$gdp, table$happinessscore)
#Remove "country" column
table$country <- NULL
head(table)
# Data Partition (random sampled)
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
training_ds
testing_ds = table [P2[51:149],]
testing_ds
# Model Building
happiness_regression = lm(happinessscore~gdp+family,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
testing_ds2 <- testing_ds[, c("pred_happinessscore", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
# Model Building
happiness_regression = lm(happinessscore~gdp+family+lifeexpectancy,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
testing_ds2 <- testing_ds[, c("pred_happinessscore", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
View(testing_ds)
View(testing_ds)
View(testing_ds)
testing_ds$pred_happinessscore = pred_values
# Model prediction
pred_values = predict(happiness_regression, newdata = testing_ds)
# Model Building
happiness_regression = lm(happinessscore~gdp+family+lifeexpectancy,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
testing_ds2 <- testing_ds[, c("pred_happinessscore", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
View(testing_ds)
# Model Building
happiness_regression = lm(happinessscore~gdp+family+lifeexpectancy,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
# Model prediction
pred_values = predict(happiness_regression, newdata = testing_ds)
pred_values
testing_ds$pred_happinessscore = pred_values
testing_ds2 <- testing_ds[, c("pred_happinessscore", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
View(testing_ds2)
# Read in the csv file
table <- read.csv(file='sml_linreg.csv',check.names=F,stringsAsFactors = F)
table_summary <- table %>% group_by(country) %>% summarize(gdp)
head(table)
# Happiness - GDP
summary(lm(happinessscore ~ gdp, data = table))
plot <- ggplot(table, aes(gdp, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness family
summary(lm(happinessscore ~ family, data = table))
plot <- ggplot(table, aes(family, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness lifeexpenctancy
summary(lm(happinessscore ~ lifeexpectancy, data = table))
plot <- ggplot(table, aes(lifeexpectancy, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness freedom
summary(lm(happinessscore ~ freedom, data = table))
plot <- ggplot(table, aes(freedom, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness generosity
summary(lm(happinessscore ~ generosity, data = table))
plot <- ggplot(table, aes(generosity, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness trust
summary(lm(happinessscore ~ trust, data = table))
plot <- ggplot(table, aes(trust, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness alcohol_liperyear
summary(lm(happinessscore ~ alcohol_liperyear, data = table))
plot <- ggplot(table, aes(alcohol_liperyear, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(table)
plot(table$gdp, table$happinessscore)
#Remove "country" column
table$country <- NULL
head(table)
# Data Partition (random sampled)
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
training_ds
testing_ds = table [P2[51:149],]
testing_ds
# Model Building
happiness_regression = lm(happinessscore~gdp+family+lifeexpectancy,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
plot(happiness_regression)
testing_ds2 <- testing_ds[, c("pred_happinessscore", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
# Read in the csv file
table <- read.csv(file='sml_linreg.csv',check.names=F,stringsAsFactors = F)
table_summary <- table %>% group_by(country) %>% summarize(gdp)
head(table)
# Happiness - GDP
summary(lm(happinessscore ~ gdp, data = table))
plot <- ggplot(table, aes(gdp, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness family
summary(lm(happinessscore ~ family, data = table))
plot <- ggplot(table, aes(family, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness lifeexpenctancy
summary(lm(happinessscore ~ lifeexpectancy, data = table))
plot <- ggplot(table, aes(lifeexpectancy, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness freedom
summary(lm(happinessscore ~ freedom, data = table))
plot <- ggplot(table, aes(freedom, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness generosity
summary(lm(happinessscore ~ generosity, data = table))
plot <- ggplot(table, aes(generosity, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness trust
summary(lm(happinessscore ~ trust, data = table))
plot <- ggplot(table, aes(trust, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness alcohol_liperyear
summary(lm(happinessscore ~ alcohol_liperyear, data = table))
plot <- ggplot(table, aes(alcohol_liperyear, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(table)
plot(table$gdp, table$happinessscore)
#Remove "country" column
table$country <- NULL
head(table)
# Data Partition (random sampled)
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
training_ds
testing_ds = table [P2[51:149],]
testing_ds
# Model Building
happiness_regression = lm(happinessscore~gdp+family+lifeexpectancy,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
testing_ds$pred_happinessscore = pred_values
# Read in the csv file
table <- read.csv(file='sml_linreg.csv',check.names=F,stringsAsFactors = F)
table_summary <- table %>% group_by(country) %>% summarize(gdp)
head(table)
# Happiness - GDP
summary(lm(happinessscore ~ gdp, data = table))
plot <- ggplot(table, aes(gdp, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness family
summary(lm(happinessscore ~ family, data = table))
plot <- ggplot(table, aes(family, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness lifeexpenctancy
summary(lm(happinessscore ~ lifeexpectancy, data = table))
plot <- ggplot(table, aes(lifeexpectancy, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness freedom
summary(lm(happinessscore ~ freedom, data = table))
plot <- ggplot(table, aes(freedom, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness generosity
summary(lm(happinessscore ~ generosity, data = table))
plot <- ggplot(table, aes(generosity, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness trust
summary(lm(happinessscore ~ trust, data = table))
plot <- ggplot(table, aes(trust, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Happiness alcohol_liperyear
summary(lm(happinessscore ~ alcohol_liperyear, data = table))
plot <- ggplot(table, aes(alcohol_liperyear, happinessscore,)) + geom_point()
plot + geom_smooth(method = "lm",
formula = y ~ x)
# Multiple Linear Regression
# Happinessscore ~ gdp + family + lifeexpectancy
summary(table)
plot(table$gdp, table$happinessscore)
#Remove "country" column
table$country <- NULL
head(table)
# Data Partition (random sampled)
P1 = runif(nrow(table))
P1
P2 = order(P1)
P2
training_ds = table[P2[1:50],]
training_ds
testing_ds = table [P2[51:149],]
testing_ds
# Model Building
happiness_regression = lm(happinessscore~gdp+family+lifeexpectancy,
data = training_ds)
abline(happiness_regression, col="red")
summary(happiness_regression)
plot(happiness_regression)
# Model prediction
pred_values = predict(happiness_regression, newdata = testing_ds)
pred_values
testing_ds$pred_happinessscore = pred_values
testing_ds2 <- testing_ds[, c("pred_happinessscore", "happinessscore", "gdp", "family", "lifeexpectancy",
"freedom", "generosity", "trust", "alcohol_liperyear")]
View(testing_ds2)
# Write testing_ds2 to csv
write.csv(testing_ds2,"\\sml_prediction_table.csv", row.names = FALSE)
